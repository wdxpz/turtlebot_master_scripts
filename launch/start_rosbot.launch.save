<?xml version="1.0"?>
<launch>
  <arg name="robot_namespace"/>
  <!-- Bringup one rosbot2s - laptop/remotepc portion -->

  <arg name="move_forward_only" default="false"/>

  <arg name="rosbot_pro" default="true"/>

  <!-- Command Line Arguments -->
  <arg name="$(arg robot_namespace)_init_x" default="0.0"/>
  <arg name="$(arg robot_namespace)_init_y" default="0.0"/>
  <arg name="$(arg robot_namespace)_init_a" default="0.0"/>

  <arg name="pos_x" default="$(arg robot_namespace)_init_x"/>
  <arg name="pos_y" default="$(arg robot_namespace)_init_y"/>
  <arg name="pos_a" default="$(arg robot_namespace)_init_a"/>

  <!-- Robot -->
  <group ns="$(arg robot_namespace)">
    <!-- robot stats, don't know if neccesary!!!!!!! -->
    <!-- copy form package rosbot_description/launch/rosbot_gazebo.launch -->
    <!-- <rosparam command="load" file="$(find joint_state_controller)/joint_state_controller.yaml" /> -->
    <!-- <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" args="joint_state_controller" /> -->
    <!-- <param name="robot_description" command="$(find xacro)/xacro.py '$(find rosbot_description)/urdf/rosbot.xacro'"/> -->
    <!-- <node name="rosbot_spawn" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model rosbot" /> -->
    <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/> -->


<!-- *************************************************************************** -->
<!-- this part should be automaticly loaded on rosbot node -->

    <!-- rplidar_ros -->
    <!-- This node communicate with device and publish its scans to /scan topic with message type sensor_msgs/LaserScan -->
    <node unless="$(arg rosbot_pro) pkg="rplidar_ros" type="rplidarNode" name="rplidar">
        <param name="angle_compensate" type="bool" value="true"/>
        <param name="serial_baudrate" type="int" value="115200""/><!--model A2 (ROSbot 2.0) -->
    </node>
    <node if="$(arg rosbot_pro)" pkg="rplidar_ros" type="rplidarNode" name="rplidar">
        <param name="angle_compensate" type="bool" value="true"/>
        <param name="serial_baudrate" type="int" value="256000"/> <!-- model A3 (ROSbot 2.0 PRO) -->
    </node>

    <!-- ROSbot 2.0 -->
    <include unless="$(arg rosbot_pro)" file="$(find rosbot_ekf)/launch/all.launch"/>

    <!-- ROSbot 2.0 PRO -->
    <include if="$(arg rosbot_pro)" file="$(find rosbot_ekf)/launch/all.launch" >
      <arg name="rosbot_pro" value="true" />
    </include>

    <node if="$(arg use_rosbot)" pkg="tf" type="static_transform_publisher" name="laser_broadcaster" args="0 0 0 3.14 0 0 base_link laser 100" />

<!-- this part should be automaticly loaded on rosbot node -->
<!-- *************************************************************************** -->
    
    <!-- AMCL Localization-->
    <node pkg="amcl" type="amcl" name="amcl">
      <!-- Load default parameters for turtlebot -->
      <param name="initial_pose_x" value="$(eval arg(pos_x))"/>
      <param name="initial_pose_y" value="$(eval arg(pos_y))"/>
      <param name="initial_pose_a" value="$(eval arg(pos_a))"/>

      <remap from="scan" to="scan"/>
      <param name="odom_frame_id"  value="$(arg robot_namespace)/odom"/>
      <param name="odom_model_type" value="diff-corrected"/>
      <param name="base_frame_id" value="$(arg robot_namespace)/base_link"/>
      <param name="update_min_d" value="0.1"/>
      <param name="update_min_a" value="0.2"/>
      <param name="min_particles" value="500"/>
      <param name="global_frame_id" value="map"/><!-- appeared in tutorial, but not appeared in rosbot_description/src/rosbot_navigation/launch/amcl_demo.launch-->
      <param name="tf_broadcast" value="true" /><!-- appeared in tutorial, but not$
     
      <!-- Use the single map server, kept from turtlebot.launch -->
      <!-- <remap from="static_map" to="/static_map"/> -->
    </node>

    <node pkg="move_base" type="move_base" name="move_base" output="screen">
        <rosparam file="$(find multirobot_nv)/param/rosbot_param/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find multirobot_nv)/param/rosbot_param/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find multirobot_nv)/param/rosbot_param/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find multirobot_nv)/param/rosbot_param/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find multirobot_nv)/param/rosbot_param/trajectory_planner.yaml" command="load" />

        <param name="controller_frequency" value="10.0" />
        <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />

        <!-- copy from pakcage rosbot_description/src/rosbot_navigation/amcl_demo.launch-->
        <!-- <remap from="cmd_vel" to="cmd_vel"/> -->
        <!-- <remap from="odom" to="odom"/ -->
>
        <!-- <remap from="scan" to="/scan"/>
        <!-- <param name="move_base/DWAPlannerROS/yaw_goal_tolerance" value="1.0"/>
        <!-- <param name="move_base/DWAPlannerROS/xy_goal_tolerance" value="1.0"/>

        <!-- Centralized map server, kept from turtlebot.launch-->
        <!--  <remap from="map" to="/map"/> -->

    </node>

  </group>

</launch>
